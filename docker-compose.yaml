services:
  frontend:
    build:
      context: ./frontend
    ports:
      - 5173:5173
    environment:
      - API_URL=http://localhost:3000
    networks:
      - app-network
    depends_on:
      - backend
  
  backend:
    build:
      context: ./backend
    environment:
      NODE_ENV: production
      POSTGRES_HOST: db
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
      FRONTEND_URL: "http://localhost:5173"
    networks:
      - app-network
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    ports:
      - 5432:5432

volumes:
  db-data:

networks:
  app-network:
    driver: bridge